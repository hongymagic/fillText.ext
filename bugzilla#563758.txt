(In reply to Boris Zbarsky (:bz) from comment #2)
> Why is this surprising?  For a full string you end up with various kerning,
> shaping, etc, operations that aren't performed on individual characters
> (because they depend on what characters are next to each other); these
> affect the width of the string.
> 
> Similarly, I'd expect the length of the string "Av" to be less than the sum
> of the widths of "A" and "v" in most reasonable fonts, etc.

I don't understand why this was marked as INVALID when the expected is not the outcome. In fact, every case I've tested so far, the sum of individual characters' widths is less than the measured width of the whole string; (see: http://jsfiddle.net/davidhong/fwawh/)

I understand that letter-spacing specifics aren't covered by the W3C nor the WHATWG Canvas spec, however I am not sure if INVALIDATING the bug is the right choice here.

Coincidentally, Webkit (Chrome, Safari) and IE9+ all seem to behave the same (i.e., sum of widths of character == width of string).

Further more, what is the expected outcome?
